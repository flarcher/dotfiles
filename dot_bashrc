# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

#=== Prompt ===
PROMPT_COMMAND='build_ps1'
_RESET="$(tput sgr0)"
last_code_as_string()
{
  local ret_code="$?" # Must be the first line
  local ret_str=''
  local ret_length="${#ret_code}"
  # Adds spaces so that we get always 3 characters
  if [ $ret_length -lt 10 ]; then
    ret_str=" ${ret_code} "
  elif [ $ret_length -lt 100 ]; then
    ret_str=" ${ret_code}"
  else
    ret_str="${ret_code}"
  fi
  # Display a success differently from an error
  if [ $ret_code -eq 0 ]; then
    ret_color="$(tput setaf 2)" # Green
  else
    ret_color="$(tput setaf 1)" # Red
  fi
  # Prompt syntax
  echo -n "${ret_color}${ret_str}${_RESET}"
}
build_ps1()
{
  PS1=''
  # Updates terminal title
  PS1+='\[\e]0;\w\a\]'
  # Last command return code
  PS1+='$(last_code_as_string)'
  # The user
  #PS1+='\[\033[01;32m\]\u@\h\[\033[00m\]'
  # Adds the path
  PS1+='\[\033[01;34m\]\w\[\033[00m\]'
  # Displays either $ or # (if root)
  PS1+='\$ '
}

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# colored GCC warnings and errors
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'
export EDITOR='vim'

# some more ls aliases
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'

# Add an "alert" alias for long running commands.  Use like so:
#   sleep 10; alert
alias alert='notify-send --urgency=low -i "$([ $? = 0 ] && echo terminal || echo error)" "$(history|tail -n1|sed -e '\''s/^\s*[0-9]\+\s*//;s/[;&|]\s*alert$//'\'')"'


# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi
